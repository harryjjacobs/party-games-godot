name: "godot-ci export"
on:
  push:
    branches:
      - main

env:
  GODOT_VERSION: 3.4
  EXPORT_NAME: jabobs-party-pack

jobs:
  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-3.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot -v --export "Linux/X11" ./build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: build/linux

  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-3.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot -v --export "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: build/windows

  export-windows-installer:
    name: Windows Installer Export
    needs: [export-windows]
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: windows
          path: build/windows
      - name: Setup
        run: choco install innosetup
      - name: Windows Installer Creation
        run: '& "C:\Program Files (x86)\Inno Setup 6\iscc.exe" windows-installer-script.iss'
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-installer
          path: build/windows-installer

  release:
    name: Release
    if: ${{ always() }}
    needs: [export-linux, export-windows, export-windows-installer]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download export artifacts
        uses: actions/download-artifact@v2
        with:
          path: build/
      - name: Zip export artifacts
        run: |
          mv build/windows-installer/*.exe . && rm -r build/windows-installer
          for i in build/*/; do (cd "$i" && zip -r "../../${i%/}.zip" .); done
        shell: bash
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
